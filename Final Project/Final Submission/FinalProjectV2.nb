(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     39056,        847]
NotebookOptionsPosition[     37020,        803]
NotebookOutlinePosition[     37863,        831]
CellTagsIndexPosition[     37820,        828]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Cartogram Function\t", "Title",
 CellChangeTimes->{{3.770055572438499*^9, 3.7700555729498453`*^9}, {
  3.770055604008165*^9, 3.7700556066618843`*^9}, {3.771594944008543*^9, 
  3.7715949539379807`*^9}},ExpressionUUID->"49ab34ee-bfd5-49f5-beef-\
400d3cc456dd"],

Cell["Richard Lapin\t", "Text",
 CellChangeTimes->{{3.549624168509506*^9, 3.549624171985794*^9}, {
  3.549624508772977*^9, 3.549624510775043*^9}, {3.5498187159613867`*^9, 
  3.5498187170087957`*^9}, {3.549819049020514*^9, 3.5498190533440437`*^9}, {
  3.77005561844785*^9, 3.7700556489651537`*^9}, {3.7715949563106337`*^9, 
  3.771594958512782*^9}},ExpressionUUID->"94536f76-3fd2-4bf6-b228-\
fa93ec9acae9"],

Cell["Christopher Wolfram", "Text",
 CellChangeTimes->{{3.549624515773694*^9, 3.5496245246892014`*^9}, {
  3.5498187208956137`*^9, 3.5498187221413403`*^9}, {3.5498190558319674`*^9, 
  3.54981906151682*^9}, {3.770055624686027*^9, 3.770055659820487*^9}, {
  3.7715949608196144`*^9, 
  3.771594966450508*^9}},ExpressionUUID->"b70c649b-a958-4202-9f22-\
238ea1f9c7d4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Cartogram", "[", 
     RowBox[{
      RowBox[{"geoPolysi", ":", 
       RowBox[{"{", "__Rule", "}"}]}], ",", 
      RowBox[{"numberOfIterations_:", "30"}], ",", 
      RowBox[{"res_:", "100"}], ",", " ", 
      RowBox[{"plotAll_", "?", "BooleanQ"}]}], "]"}], ":=", "\n", "    ", 
    RowBox[{"Module", " ", "[", "\n", "        ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "regions", ",", "masks", ",", "map", ",", "mapPairs", ",", 
        "population", ",", "numberOfCells", ",", "cellDensity", ",", "gPairs",
         ",", "geoPolys"}], "}"}], ",", "\n", "        ", "\n", "        ", 
      RowBox[{
       RowBox[{"geoPolys", " ", "=", " ", 
        RowBox[{"Keys", "[", "geoPolysi", "]"}]}], ";", "\n", "        ", 
       "\n", "        ", 
       RowBox[{"regions", " ", "=", " ", 
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", 
          RowBox[{"EntityValue", "[", 
           RowBox[{"geoPolys", ",", "\"\<Polygon\>\""}], "]"}], "]"}], 
         "]"}]}], ";", "\n", "        ", "\n", "        ", 
       RowBox[{"map", " ", "=", " ", 
        RowBox[{"(", "\n", "            ", 
         RowBox[{
          RowBox[{"masks", " ", "=", " ", 
           RowBox[{
            RowBox[{"Function", " ", "[", "\n", "                ", 
             RowBox[{"poly", ",", " ", 
              RowBox[{"ImageData", " ", "[", "\n", "                    ", 
               RowBox[{
                RowBox[{"Binarize", " ", "@", " ", 
                 RowBox[{
                 "Rasterize", " ", "[", "\n", "                        ", 
                  RowBox[{
                   RowBox[{
                   "Style", " ", "[", "\n", "                            ", 
                    RowBox[{
                    RowBox[{
                    "Graphics", " ", "[", "\n", 
                    "                                ", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"White", ",", " ", 
                    RowBox[{"MeshPrimitives", "[", 
                    RowBox[{
                    RowBox[{"DiscretizeGraphics", " ", "@", " ", "poly"}], 
                    ",", " ", "2"}], "]"}]}], "}"}], ",", "\n", 
                    "                                ", 
                    RowBox[{"Background", " ", "->", " ", "Black"}], ",", 
                    "\n", "                                ", 
                    RowBox[{"PlotRange", " ", "->", " ", 
                    RowBox[{"Reverse", " ", "@", " ", 
                    RowBox[{
                    "GeoBounds", " ", "[", "\n", 
                    "                                    ", 
                    RowBox[{"EntityValue", "[", 
                    RowBox[{"geoPolys", ",", "\"\<Polygon\>\""}], "]"}], "\n",
                     "                                    ", "]"}]}]}]}], 
                    "\n", "                                ", "]"}], ",", 
                    "\n", "                            ", 
                    RowBox[{"Antialiasing", " ", "->", " ", "False"}]}], "\n",
                     "                        ", "]"}], ",", "\n", 
                   "                        ", 
                   RowBox[{"RasterSize", " ", "->", " ", "res"}]}], "\n", 
                  "                    ", "]"}]}], ",", "\n", 
                "                    ", "\"\<Bit\>\""}], "\n", 
               "                ", "]"}]}], "\n", "            ", "]"}], " ", 
            "/@", " ", 
            RowBox[{"EntityValue", "[", 
             RowBox[{"geoPolys", ",", " ", "\"\<Polygon\>\""}], "]"}]}]}], 
          ";", "\n", "\n", "            ", 
          RowBox[{"Fold", " ", "[", "\n", "                ", 
           RowBox[{
            RowBox[{
             RowBox[{"#1", " ", "+", " ", 
              RowBox[{"Clip", " ", "[", "\n", "                        ", 
               RowBox[{
                RowBox[{"#2", "-", 
                 RowBox[{"(", 
                  RowBox[{"#2", "*", "#1"}], ")"}]}], ",", "\n", 
                "                        ", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "Infinity"}], "}"}]}], "\n", 
               "                    ", "]"}]}], "&"}], ",", "\n", 
            "                    ", 
            RowBox[{"MapIndexed", " ", "[", "\n", "                        ", 
             RowBox[{
              RowBox[{
               RowBox[{"#1", " ", "*", " ", 
                RowBox[{"First", "[", "#2", "]"}]}], "&"}], ",", "\n", 
              "                        ", "masks"}], "\n", 
             "                    ", "]"}]}], "\n", "            ", "]"}]}], 
         "\n", "        ", ")"}]}], ";", "\n", "    ", "\n", "        ", 
       RowBox[{"mapPairs", " ", "=", " ", 
        RowBox[{"BlockMap", " ", "[", "\n", "            ", 
         RowBox[{
          RowBox[{
           RowBox[{"{", "\n", "                ", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", "\n", 
             "                ", 
             RowBox[{
              RowBox[{"3", "*", 
               RowBox[{"Count", " ", "[", "\n", "                    ", 
                RowBox[{
                 RowBox[{
                 "Position", " ", "[", "\n", "                        ", 
                  RowBox[{
                   RowBox[{"Flatten", "[", "#", "]"}], ",", "\n", 
                   "                        ", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "\n", 
                  "                    ", "]"}], ",", "\n", 
                 "                    ", 
                 RowBox[{"_", "?", "EvenQ"}], ",", "\n", 
                 "                    ", "2"}], "\n", "                ", 
                "]"}]}], " ", "+", " ", 
              RowBox[{"Count", " ", "[", "\n", "                    ", 
               RowBox[{
                RowBox[{
                "Position", " ", "[", "\n", "                        ", 
                 RowBox[{
                  RowBox[{"Flatten", "[", "#", "]"}], ",", "\n", 
                  "                        ", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", 
                    RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "\n", 
                 "                    ", "]"}], ",", "\n", 
                "                    ", 
                RowBox[{"_", "?", "OddQ"}], ",", "\n", "                    ",
                 "2"}], "\n", "                ", "]"}], " ", "-", "1"}]}], 
            " ", "\n", "            ", "}"}], "&"}], ",", "\n", 
          "            ", 
          RowBox[{"ArrayPad", "[", 
           RowBox[{"map", ",", " ", "1", ",", " ", "0"}], "]"}], ",", " ", 
          "\n", "            ", 
          RowBox[{"{", 
           RowBox[{"3", ",", " ", "3"}], "}"}], ",", " ", "\n", 
          "            ", 
          RowBox[{"{", 
           RowBox[{"1", ",", " ", "1"}], "}"}]}], "\n", "        ", "]"}]}], 
       ";", "\n", "\n", "        ", 
       RowBox[{"population", " ", "=", " ", 
        RowBox[{"QuantityMagnitude", "[", 
         RowBox[{"Values", "[", "geoPolysi", "]"}], "]"}]}], ";", "\n", "\n", 
       "        ", 
       RowBox[{"numberOfCells", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Count", "[", 
            RowBox[{"map", ",", " ", "#", ",", " ", "2"}], "]"}], ")"}], " ", 
          "&"}], " ", "/@", " ", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", 
           RowBox[{"EntityList", "[", "geoPolys", "]"}], "]"}], "]"}]}]}], 
       ";", "\n", "       ", "\n", "        ", 
       RowBox[{"cellDensity", " ", "=", " ", 
        RowBox[{"N", "[", 
         RowBox[{"Prepend", "[", 
          RowBox[{
           RowBox[{"population", " ", "/", " ", "numberOfCells"}], ",", " ", 
           "0"}], "]"}], "]"}]}], ";", "\n", "        ", "\n", "        ", 
       RowBox[{"gPairs", " ", "=", " ", 
        RowBox[{"mapPairs", " ", "/.", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a_Integer", ",", " ", "b_Integer"}], "}"}], " ", "->", 
          " ", 
          RowBox[{"g", "[", 
           RowBox[{"a", ",", " ", "b"}], "]"}]}]}]}], ";", "\n", "\n", 
       "        ", 
       RowBox[{"(", "\n", "            ", 
        RowBox[{
         RowBox[{"f", " ", "[", 
          RowBox[{"{", "\n", "                    ", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"g", "[", 
               RowBox[{"a1_", ",", " ", "a2_"}], "]"}], ",", " ", 
              RowBox[{"g", "[", 
               RowBox[{"b1_", ",", " ", "b2_"}], "]"}], ",", " ", 
              RowBox[{"g", "[", 
               RowBox[{"c1_", ",", " ", "c2_"}], "]"}]}], "}"}], ",", "\n", 
            "                    ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"g", "[", 
               RowBox[{"d1_", ",", " ", "d2_"}], "]"}], ",", " ", 
              RowBox[{"g", "[", 
               RowBox[{"e1_", ",", " ", "e2_"}], "]"}], ",", " ", 
              RowBox[{"g", "[", 
               RowBox[{"f1_", ",", " ", "f2_"}], "]"}]}], "}"}], ",", "\n", 
            "                    ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"g", "[", 
               RowBox[{"g1_", ",", " ", "g2_"}], "]"}], ",", " ", 
              RowBox[{"g", "[", 
               RowBox[{"h1_", ",", " ", "h2_"}], "]"}], ",", " ", 
              RowBox[{"g", "[", 
               RowBox[{"i1_", ",", " ", "i2_"}], "]"}]}], "}"}]}], "\n", 
           "                ", "}"}], "]"}], " ", ":=", "\n", "            ", 
         "\n", "                ", 
         RowBox[{"Module", " ", "[", "\n", "                    ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"highest", ",", " ", "nsecurity"}], "}"}], ",", "\n", 
           "                    ", 
           RowBox[{"If", " ", "[", "\n", "                        ", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"numberOfCells", "[", 
                RowBox[{"[", "e1", "]"}], "]"}], " ", ">", " ", "1"}], " ", "&&",
               " ", 
              RowBox[{"e1", " ", "=!=", " ", "0"}]}], ",", "\n", "\n", 
             "                        ", 
             RowBox[{
              RowBox[{"highest", " ", "=", " ", 
               RowBox[{
               "First", " ", "[", "\n", "                            ", 
                RowBox[{
                "Sort", " ", "[", "\n", "                                ", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "a1", ",", " ", "b1", ",", " ", "c1", ",", " ", "d1", ",", 
                    " ", "f1", ",", " ", "g1", ",", " ", "h1", ",", " ", 
                    "i1"}], "}"}], ",", "\n", 
                  "                                ", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"cellDensity", "[", 
                    RowBox[{"[", 
                    RowBox[{"#1", "+", "1"}], "]"}], "]"}], " ", ">", " ", 
                    RowBox[{"cellDensity", "[", 
                    RowBox[{"[", 
                    RowBox[{"#2", "+", "1"}], "]"}], "]"}]}], "&"}]}], "\n", 
                 "                            ", "]"}], "\n", 
                "                        ", "]"}]}], ";", "\n", 
              "                        ", 
              RowBox[{"nsecurity", " ", "=", " ", 
               RowBox[{
               "RandomChoice", " ", "[", "\n", "                            ", 
                RowBox[{
                "Cases", " ", "[", "\n", "                                ", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"a1", ",", " ", "a2"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"b1", ",", " ", "b2"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"c1", ",", " ", "c2"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"f1", ",", " ", "f2"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"i1", ",", " ", "i2"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"h1", ",", " ", "h2"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"g1", ",", " ", "g2"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"d1", ",", " ", "d2"}], "}"}]}], "}"}], ",", "\n",
                   "                                ", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"highest", ",", " ", "s_"}], "}"}], " ", "->", 
                   " ", "s"}], ",", "\n", "                                ", 
                  RowBox[{"{", "1", "}"}], ",", "\n", 
                  "                                ", "1"}], "\n", 
                 "                            ", "]"}], "\n", 
                "                        ", "]"}]}], ";", "\n", 
              "                        ", 
              RowBox[{"If", " ", "[", "\n", "                            ", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"cellDensity", "[", 
                    RowBox[{"[", 
                    RowBox[{"highest", "+", "1"}], "]"}], "]"}], " ", ">", 
                    " ", 
                    RowBox[{"cellDensity", "[", 
                    RowBox[{"[", 
                    RowBox[{"e1", "+", "1"}], "]"}], "]"}]}], " ", "&&", " ", 
                   RowBox[{"e2", " ", "<", " ", "12"}]}], ")"}], " ", "||", 
                 " ", 
                 RowBox[{"e2", " ", "<", " ", "8"}]}], ",", "\n", 
                "                            ", 
                RowBox[{"g", "[", 
                 RowBox[{"highest", ",", " ", "e2"}], "]"}], ",", "\n", 
                "                            ", 
                RowBox[{"g", "[", 
                 RowBox[{"e1", ",", " ", "e2"}], "]"}]}], "\n", 
               "                        ", "]"}]}], ",", "\n", "\n", 
             "                        ", 
             RowBox[{"g", "[", 
              RowBox[{"e1", ",", "e2"}], "]"}]}], "\n", 
            "                     ", "]"}]}], "\n", "                ", 
          "]"}]}], "\n", "        ", ")"}], ";", "\n", "        ", 
       RowBox[{"(", "\n", "            ", 
        RowBox[{
         RowBox[{
          RowBox[{"regionStep", "[", "gPairs_", "]"}], " ", ":=", " ", "\n", 
          "                ", 
          RowBox[{"BlockMap", " ", "[", "\n", "                    ", 
           RowBox[{"f", ",", "\n", "                    ", 
            RowBox[{"ArrayPad", "[", 
             RowBox[{"gPairs", ",", " ", "1", ",", " ", 
              RowBox[{"g", "[", 
               RowBox[{"0", ",", " ", "0"}], "]"}]}], "]"}], ",", "\n", 
            "                    ", 
            RowBox[{"{", 
             RowBox[{"3", ",", "3"}], "}"}], ",", "\n", 
            "                    ", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1"}], "}"}]}], "\n", "                ", 
           "]"}]}], ";", "\n", "\n", "            ", 
         RowBox[{
          RowBox[{"recalcSecurities", "[", "gPairs_", "]"}], " ", ":=", " ", 
          "\n", "                ", 
          RowBox[{"BlockMap", " ", "[", "\n", "                    ", 
           RowBox[{
            RowBox[{
             RowBox[{"g", " ", "[", "\n", "                        ", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", "\n", 
               "                        ", 
               RowBox[{
                RowBox[{"3", "*", 
                 RowBox[{
                 "Count", " ", "[", "\n", "                            ", 
                  RowBox[{
                   RowBox[{
                   "Position", " ", "[", "\n", 
                    "                                ", 
                    RowBox[{
                    RowBox[{"Flatten", "[", "#", "]"}], ",", "\n", 
                    "                                ", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "\n", 
                    "                            ", "]"}], ",", "\n", 
                   "                            ", 
                   RowBox[{"_", "?", "EvenQ"}], ",", "\n", 
                   "                            ", "2"}], "\n", 
                  "                        ", "]"}]}], " ", "\n", 
                "                        ", "+", " ", "\n", 
                "                        ", 
                RowBox[{
                "Count", " ", "[", "\n", "                            ", 
                 RowBox[{
                  RowBox[{
                  "Position", " ", "[", "\n", 
                   "                                ", 
                   RowBox[{
                    RowBox[{"Flatten", "[", "#", "]"}], ",", "\n", 
                    "                                ", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "\n", 
                   "                            ", "]"}], ",", "\n", 
                  "                            ", 
                  RowBox[{"_", "?", "OddQ"}], ",", "\n", 
                  "                            ", "2"}], "\n", 
                 "                        ", "]"}], " ", "-", " ", "1"}]}], 
              "\n", "                    ", "]"}], "&"}], ",", "\n", 
            "                    ", 
            RowBox[{"ArrayPad", "[", 
             RowBox[{
              RowBox[{"gPairs", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", " ", "All", ",", " ", "1"}], "]"}], "]"}],
               ",", " ", "1", ",", " ", "\"\<-\>\""}], "]"}], ",", "\n", 
            "                    ", 
            RowBox[{"{", 
             RowBox[{"3", ",", "3"}], "}"}], ",", "\n", 
            "                    ", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1"}], "}"}]}], "\n", "                ", 
           "]"}]}], ";", "\n", "\n", "            ", 
         RowBox[{
          RowBox[{"recalcDensities", "[", "gPairs_", "]"}], " ", ":=", " ", 
          RowBox[{"Module", " ", "[", "\n", "                ", 
           RowBox[{
            RowBox[{"{", "numberOfCells", "}"}], ",", "\n", 
            "                ", 
            RowBox[{
             RowBox[{"numberOfCells", " ", "=", " ", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"Count", "[", 
                  RowBox[{
                   RowBox[{"gPairs", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", " ", "All", ",", " ", "1"}], "]"}], 
                    "]"}], ",", " ", "#", ",", " ", "2"}], "]"}], ")"}], 
                "&"}], " ", "/@", " ", "regions"}]}], ";", "\n", 
             "                ", 
             RowBox[{"cellDensity", " ", "=", " ", 
              RowBox[{"N", "[", 
               RowBox[{"Prepend", "[", 
                RowBox[{
                 RowBox[{"population", " ", "/", " ", 
                  RowBox[{"(", 
                   RowBox[{"numberOfCells", " ", "+", " ", "1"}], ")"}]}], 
                 ",", " ", "0"}], "]"}], "]"}]}]}]}], "\n", "            ", 
           "]"}]}], ";"}], "\n", "        ", ")"}], ";", "\n", "        ", 
       "\n", "        ", 
       RowBox[{"steps1", " ", "=", " ", 
        RowBox[{"NestList", " ", "[", "\n", "            ", 
         RowBox[{
          RowBox[{
           RowBox[{"(", "\n", "                ", 
            RowBox[{
             RowBox[{"recalcDensities", "[", "#", "]"}], ";", "\n", 
             "                ", 
             RowBox[{"recalcSecurities", "[", 
              RowBox[{"regionStep", "[", "#", "]"}], "]"}]}], "\n", 
            "            ", ")"}], "&"}], ",", "\n", "            ", "gPairs",
           ",", "\n", "            ", "numberOfIterations"}], "\n", 
         "        ", "]"}]}], ";", "\n", "        ", 
       RowBox[{"If", "[", "\n", "           ", 
        RowBox[{
         RowBox[{"TrueQ", "[", "plotAll", "]"}], ",", "\n", "           ", 
         RowBox[{
          RowBox[{
           RowBox[{"ArrayPlot", "[", 
            RowBox[{"#", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", " ", "All", ",", " ", "1"}], "]"}], "]"}], 
            "]"}], "&"}], " ", "/@", " ", "steps1"}], ",", "\n", 
         "           ", 
         RowBox[{"ArrayPlot", "[", 
          RowBox[{
           RowBox[{"Last", "[", "steps1", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", " ", "All", ",", " ", "1"}], "]"}], "]"}], 
          "]"}]}], "\n", "           ", "]"}]}]}], "\n", "    ", "]"}]}], 
   ";"}], "\n", "    "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Cartogram", "[", 
    RowBox[{
     RowBox[{"geoPolysi", ":", 
      RowBox[{"{", "__Rule", "}"}]}], ",", 
     RowBox[{"numberOfIterations_:", "30"}], ",", 
     RowBox[{"res_:", "100"}]}], "]"}], ":=", 
   RowBox[{"Cartogram", "[", 
    RowBox[{
    "geoPolysi", ",", "numberOfIterations", ",", "res", ",", "False"}], 
    "]"}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Cartogram", "[", 
    RowBox[{"geoPolys_", ",", " ", "opts___"}], "]"}], " ", ":=", " ", "\n", 
   "    ", 
   RowBox[{"Cartogram", " ", "[", "\n", "        ", 
    RowBox[{
     RowBox[{"Normal", " ", "[", "\n", "            ", 
      RowBox[{"DeleteMissing", "[", "\n", "               ", 
       RowBox[{"EntityValue", " ", "[", "\n", "                   ", 
        RowBox[{
        "geoPolys", ",", "\n", "                   ", "\"\<Population\>\"", 
         ",", "\n", "                   ", "\"\<EntityAssociation\>\""}], 
        "\n", "            ", "]"}], "\n", "            ", "]"}], "\n", 
      "        ", "]"}], ",", "\n", "        ", "opts"}], "\n", "    ", 
    "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.7715134179081516`*^9, 3.77151359903661*^9}, {
   3.771513629659585*^9, 3.7715136297601595`*^9}, {3.771513659878277*^9, 
   3.7715137265342627`*^9}, {3.7715137708568635`*^9, 
   3.7715137723776126`*^9}, {3.7715138756902432`*^9, 
   3.7715138761078806`*^9}, {3.7715141788600225`*^9, 
   3.7715142213622212`*^9}, {3.771518771665123*^9, 3.771518790189579*^9}, {
   3.7715188666759715`*^9, 3.7715189065912275`*^9}, {3.7715192336622496`*^9, 
   3.771519236625327*^9}, {3.7715192752440186`*^9, 3.77151929839305*^9}, {
   3.77151933749349*^9, 3.7715193719523153`*^9}, {3.7715194255868363`*^9, 
   3.7715194604116764`*^9}, {3.7715195229702992`*^9, 
   3.7715195310726132`*^9}, {3.771519582546954*^9, 3.7715196041182804`*^9}, {
   3.771519649157765*^9, 3.7715196581138372`*^9}, {3.771519728089616*^9, 
   3.771519794256613*^9}, {3.7715198382489605`*^9, 3.771519849796041*^9}, {
   3.7715199605297785`*^9, 3.7715199715303917`*^9}, {3.77152032030834*^9, 
   3.7715203394980507`*^9}, {3.771598679382295*^9, 3.771598694214572*^9}, {
   3.7716084710937033`*^9, 3.771608472705392*^9}, {3.771608528263768*^9, 
   3.7716085576621256`*^9}, {3.7716233836644306`*^9, 
   3.7716233898685713`*^9}, {3.77162349486721*^9, 3.77162355276278*^9}, {
   3.7716235843133645`*^9, 3.771623592260062*^9}, {3.7716237204641495`*^9, 
   3.7716237703123617`*^9}, 3.7716248322360907`*^9, {3.7716318212502356`*^9, 
   3.771631842816543*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"3437a06e-722c-4ad9-a84b-caba5fe903b0"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7716231099460387`*^9, 3.7716231161514416`*^9}, 
   3.771623370279931*^9},ExpressionUUID->"7758a0b1-7654-483d-84ab-\
684803646475"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"europe", "=", 
   RowBox[{"Cartogram", "[", 
    RowBox[{
     NamespaceBox["LinguisticAssistant",
      DynamicModuleBox[{Typeset`query$$ = "European countries", 
       Typeset`boxes$$ = RowBox[{
         TemplateBox[{"\"Europe\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"GeographicRegion\"", ",", "\"Europe\""}], "]"}], 
           "\"Entity[\\\"GeographicRegion\\\", \\\"Europe\\\"]\"", 
           "\"geographic region\""}, "Entity"], "[", 
         TemplateBox[{"\"countries\"", 
           RowBox[{"EntityProperty", "[", 
             RowBox[{"\"GeographicRegion\"", ",", "\"Countries\""}], "]"}], 
           "\"EntityProperty[\\\"GeographicRegion\\\", \\\"Countries\\\"]\""},
           "EntityProperty"], "]"}], 
       Typeset`allassumptions$$ = {{
        "type" -> "MultiClash", "word" -> "", "template" -> 
         "Assuming ${word1} is referring to ${desc1}. Use \"${word2}\" as \
${desc2}.", "count" -> "2", 
         "Values" -> {{
           "name" -> "GeographicRegion", "word" -> "European", "desc" -> 
            "a continent", "input" -> "*MC.%7E-_*GeographicRegion-"}, {
           "name" -> "CountryClass", "word" -> "", "desc" -> 
            "a class of countries", "input" -> "*MC.%7E-_*CountryClass-"}}}}, 
       Typeset`assumptions$$ = {}, Typeset`open$$ = {1, 2}, 
       Typeset`querystate$$ = {
       "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
        1.0484024`7.472072999957452, "Messages" -> {}}}, 
       DynamicBox[ToBoxes[
         AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
          Dynamic[Typeset`query$$], 
          Dynamic[Typeset`boxes$$], 
          Dynamic[Typeset`allassumptions$$], 
          Dynamic[Typeset`assumptions$$], 
          Dynamic[Typeset`open$$], 
          Dynamic[Typeset`querystate$$]], StandardForm],
        ImageSizeCache->{348., {12., 20.}},
        TrackedSymbols:>{
         Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
          Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
       DynamicModuleValues:>{},
       UndoTrackedVariables:>{Typeset`open$$}],
      BaseStyle->{"Deploy"},
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True], ",", "350", ",", "500", ",", "True"}], 
    "]"}]}], ";", 
  RowBox[{"world", "=", 
   RowBox[{"Cartogram", "[", 
    RowBox[{
     NamespaceBox["LinguisticAssistant",
      DynamicModuleBox[{Typeset`query$$ = "all countries", Typeset`boxes$$ = 
       TemplateBox[{"\"all countries, dependencies, and territories\"", 
         RowBox[{"EntityClass", "[", 
           RowBox[{"\"Country\"", ",", "\"Countries\""}], "]"}], 
         "\"EntityClass[\\\"Country\\\", \\\"Countries\\\"]\"", 
         "\"countries\""}, "EntityClass"], 
       Typeset`allassumptions$$ = {{
        "type" -> "SubCategory", "word" -> "all countries", "template" -> 
         "Assuming ${desc1}. Use ${desc2} instead", "count" -> "2", 
         "Values" -> {{
           "name" -> "Countries", "desc" -> 
            "all countries, dependencies, and territories", "input" -> 
            "*DPClash.CountryEC.all+countries-_*Countries-"}, {
           "name" -> "SovereignCountries", "desc" -> 
            "all sovereign countries", "input" -> 
            "*DPClash.CountryEC.all+countries-_*SovereignCountries-"}}}}, 
       Typeset`assumptions$$ = {}, Typeset`open$$ = {1, 2}, 
       Typeset`querystate$$ = {
       "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
        4.8672606`8.138829593101324, "Messages" -> {}}}, 
       DynamicBox[ToBoxes[
         AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
          Dynamic[Typeset`query$$], 
          Dynamic[Typeset`boxes$$], 
          Dynamic[Typeset`allassumptions$$], 
          Dynamic[Typeset`assumptions$$], 
          Dynamic[Typeset`open$$], 
          Dynamic[Typeset`querystate$$]], StandardForm],
        ImageSizeCache->{447., {7., 17.}},
        TrackedSymbols:>{
         Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
          Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
       DynamicModuleValues:>{},
       UndoTrackedVariables:>{Typeset`open$$}],
      BaseStyle->{"Deploy"},
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True], ",", "350", ",", "500", ",", "True"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.771623784155374*^9, 3.771623804130949*^9}, {
   3.7716249517254314`*^9, 3.7716249628795977`*^9}, {3.7716317197796926`*^9, 
   3.77163180645476*^9}, 3.771631880345097*^9, {3.771633715529354*^9, 
   3.7716337399657745`*^9}, {3.7716337728583536`*^9, 3.771633774198534*^9}, {
   3.7716338697061567`*^9, 3.7716339245741587`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"3ec0f500-9fb8-498d-95ec-8863fb64905e"],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0\\\"]\\) \
encountered.\"",2,4,1,31586672943128482787,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.771633972393459*^9},
 CellLabel->
  "During evaluation of \
In[4]:=",ExpressionUUID->"a6a387a6-72fa-457e-99bf-812e91be2544"],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0\\\"]\\) \
encountered.\"",2,4,2,31586672943128482787,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7716339724193907`*^9},
 CellLabel->
  "During evaluation of \
In[4]:=",ExpressionUUID->"7af0713c-fa6f-401b-9d66-67bad2f95dbd"],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0\\\"]\\) \
encountered.\"",2,4,3,31586672943128482787,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7716339724323554`*^9},
 CellLabel->
  "During evaluation of \
In[4]:=",ExpressionUUID->"7df56194-46c5-404e-8f4b-59e22afc03e9"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Power\\\", \\\"::\\\", \
\\\"infy\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,4,4,31586672943128482787,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7716339724493113`*^9},
 CellLabel->
  "During evaluation of \
In[4]:=",ExpressionUUID->"47372b3c-e38e-47c8-b66c-b3d985a8a015"],

Cell[BoxData[
 TemplateBox[{
  "Infinity","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"",2,4,5,31586672943128482787,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7716352320412407`*^9},
 CellLabel->
  "During evaluation of \
In[4]:=",ExpressionUUID->"33b7f2db-8040-44d6-ae5a-0001421bf25d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Last", "[", "europe", "]"}]], "Input",
 CellChangeTimes->{{3.7716628320100503`*^9, 3.771662837635004*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"99cad37a-223e-4404-b323-33c50d456393"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzt3e1S2zgUBuAECDApJTOdTAcmmzIZkiWQpgy6lF5Cf+6fvfm9gI2tb+lI
1pFlOzJ6p21sSyY2j4/smKRs/vz7+8/FZDL55/T3v+lkQnrOZtP3M5aUlCBy
dzf0FpT0nbu7ov6JUmHfyQSts1qtjCUfHx/pN62km9wZmTWvslpB5qSg5xLL
fNakvqLmWrePOh1uZknCAOYBpV5Fdvso5jnFJK/Nw9CVXgU8p4DmUEf7FC77
fZQyzyruMtfxLXPRuizkmQUyhwrdNKe9qn+Wy0KeV0BzAN0wn8mOyyVTL+yZ
BDYH0eW01mu5lOofj4+PPW14SXQc5p6Ld7N9qaI/4tEPh+iNL4mK29xQ37JH
q5WZ//wZV+eHKi13ogSVcHOKbrVw8dr8kSb86Q+FvP8Em9eFbjZU1JwcbX4Y
C/l8PvQWoALdkjHMFXrjYPip5Y0mEH1zEEm+U/3npD6f50NfSRPlR6gzOxdG
G525Bskb0TdkU2dk5ixDb0hcIPNTqqYLVfzaZf7mNd/wjNN8NOgXPMq4fm2i
vzkLfSunNhvLvNd96yrzzNHd5Ir5tWn+pkZH37JL/tPEZpzo83nm6E5xik4Y
uM9cu7jf0rAJ23wM6GSe9zndQ87V0eZySqofDqM6pWeN7iWn4zszZ31q85lJ
ztS3/GZOHZf5yNAzU/eN7MJ8ppLLgOZiaCdGoY+OfCTmR9v8wqIWuWHh81sj
RCv08Zlniq6LH1HmNzdN6K46H3qvUyW7q/eZWeN1EOiWOUxumg+93wkikHND
NwSPWPObGx3dIW5dxA293wkimPN7nc7e4qaZQ+rN5k5v23zonU6Q6RzM0JsV
HpPcVg+oc6/52NCnuZvzWj8aydF8xT9nhcgXGXWpo/eUBjY/e3Tz7W+m+RFj
7icX5rc0hNx2sUcrmSd1+RN5ej4FXOeLHm0R0H2at7nxEQbbXKqnNq/Zk2el
mp/CFleThjkj/dIQ4Dn85h3sVOqofqA5V3eYz0LJIXRV/Zbw2dv393fk2Mzf
ib8yzU/qTyzPmnmTtRu9ocxzQCeqezUHuh9d5BK90Xxrmwt1bRnWfLXSsTXz
pzbmla35bEnM+z401mS9ZpMGH12INJ+FksPolbsxfzLH7A/kbZs/K+bPz+Hk
pnkTeZhmz+PBmqeeg9AhdY85TQtzmxxj7iIHzXkQ5oZ6s3mIZv8ngSb0rszD
0OuhPXhfnOQrD3mYebfkw5hX6HaR1+nW3KtOz+ahJ3Q3udc8BH0KmE9Tmveo
rg/u9kfRqhxN9jTm2lvjYPh3Zh62Lx7ylY8cY87d1XkPebB5r7UOm8N9FXPo
DdFI8kb1d07uN2cdfOL+Mg9Rn3oCSM/Dz9Ko4yNN1soZ/S+/ee1dTfBm3jna
3DfGv79Lc8f4rr4uCzcHyBvVceQovcjV2kUrdE+VEyq+36vLZsDnmnDkIgq0
EttPPqGXGVPmjeoYc+S3v93a0WHm9YOb/GRe/SF7uDW2zJXY4pC5ZE9K7lNH
juyoDENOs15zdLi9HtiPtM73ewseP7R/qxNljgp0Cw6p3uHQPrA5LXZX+5Gf
zvd1zOZIcg29D3MvuUMdSY6zG2hsr7Im6uU7kKNA5+yqO7rMv30LQm/H/VoF
Zw6hR5iH27U9N7SJ8aLNDj2bV9mLyNbYMm9Ab0/+iiOn6F+rtCGPR4/1i4l5
dwYKRdfJL2kTu95vaW6yJyjzVyT581eZJnHv7ZhI9WjAiDRwy+wN80u1MVDc
Y66qpyDX0JHmVaLJg/0GKvTq1/X40O9P4dP7PTS28yQw3yYc2HXzCHKfeRN5
zKUczi1FYPR7FjbjNA8uch0dam1X4Rr5aytyj3kzecQAH02XOPf3ivq9hq6x
o8yhF2udmkeJe8yDyB2IUMtwlQ7l3sjlKd5SJ0H+HvL05iHiEHlrc0VfkM5h
4PM0vySXIrb6d20tXNV3bB5EjjJHk4OHgRF2bNQ/l+veVYn56xe1+r400WW/
7zT8q/CcgXmYOEjerTmMThvmYlEnykZ09HuXeaUuer28vHyXmagZ2jxQfBBz
FdT+ZKvz0Og6bvJL9bW5Zr5YtERPZx4sDpN3bi5BxeQZqHvMlV5KoS8W52Me
Tj6YuYo+d5mnV/87wBwqc4n+8iLQF4v26C206VOmKvM+zE1bX1uPcZkLdGm+
UBKNHuWsJlWZD2FOfOzsxV4v5gQ25+ovAn1hx61uY/FESbcwd5D3bx6WPtBJ
/dMU1Xp3ilnqMHmtjhNvn1TmLvSzJ//B0lpdsu92Av3Xr0ZzA71LbNW8/dCe
q/kPLS3RdfPd7hcNbXebLyb1fwrYlzhDT2HuQM+JPBU7aE6c5FUjtSB+qpTm
CPJ8zANuzJ6EbfQ26l7zU3zmtEdf5InMYfQBzemDW5z+00Gl7wx0oe4k5+mF
fLzm80bzuswN9jbgAt0y52k070c9oTmIfr7m9djumY1H3yHQ65WqiYc6nL2l
vffowV62j8q8k6DMldH+4UGqe8kCvP0XB8W8g+yc6K5Ld8X8QXi1o3fWOvrO
azHHoePNiW7eruCJmCzmnZsTGL3JXPkagk3MxKNr6xfzroIu9AdtdU2cLWK1
r5CCzsCMtrCYdxdUoQd+zYk1bRU20edoxxHUOfyJxTMzZ0O8t9BJKLYjpre6
xGjP3NzSpbt7ZuI0DvMKO7y83dFPAJ5h3jDHkA9v7t7/M9MWqe+9mnXezVMZ
A/1YzM9JE5UTeMXPbsR08xzm2d1ljiIf3rybb1aP6Yi7intsJ0OZV5v12YR7
jl3lxDwU0ORtzOlWsSnxQJzHwWDfuKyjovNX9Mr9OEJ6NBcb5fqgKetVzFtG
Q1ffjFE/4kf2WHPvRpqjf4ffj08Rldz4gB3+mp2ak6g6925lKep+Ekde1zn9
Ag5z9TlCzUt6TJz5VwueTlm/h6X6LXr97lAJJlhzwV6SafB1XthHkCjzAp95
Ys2L+hiCNS/oI8uzegxA3kXcztXQG5AimjmRL8+H3q5zzFWVoTciRaT50Fty
3rnikfMk40OgmDfn6spErxeNY7AvASKphXrGNV7SkCutxq+Aei8ZXeh5myoX
7E8SxszJ5cJS8Z8mst4Le0nJEPkfcmgK3w==
   "], {{0, 0}, {500, 106}}, {0, 50}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{1032.7272727272712`, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellChangeTimes->{3.7716628382244263`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"307543fc-ea96-4c17-aa66-1016ba2e5ff5"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1264, 637},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
DockedCells->{
  Cell[
   TextData[{
     StyleBox["  WOLFRAM ", 
      RGBColor[0.97, 0.83, 0.35], FontFamily -> "Source Sans Pro", FontWeight -> 
      Bold, FontSize -> 40], 
     StyleBox["SUMMER SCHOOL", 
      GrayLevel[1], FontFamily -> "Source Sans Pro", FontSize -> 40], 
     StyleBox[" 2019", 
      RGBColor[0.97, 0.83, 0.35], FontFamily -> "Source Sans Pro", FontSize -> 
      40]}], CellFrameMargins -> 10, Background -> 
   RGBColor[0.12, 0.14, 0.15]]},
Magnification:>1.1 Inherited,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 11, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 264, 4, 107, "Title",ExpressionUUID->"49ab34ee-bfd5-49f5-beef-400d3cc456dd"],
Cell[847, 28, 405, 6, 39, "Text",ExpressionUUID->"94536f76-3fd2-4bf6-b228-fa93ec9acae9"],
Cell[1255, 36, 363, 6, 39, "Text",ExpressionUUID->"b70c649b-a958-4202-9f22-238ea1f9c7d4"],
Cell[1621, 44, 24059, 507, 3476, "Code",ExpressionUUID->"3437a06e-722c-4ad9-a84b-caba5fe903b0"],
Cell[25683, 553, 282, 5, 121, "Input",ExpressionUUID->"7758a0b1-7654-483d-84ab-684803646475"],
Cell[CellGroupData[{
Cell[25990, 562, 4833, 98, 84, "Input",ExpressionUUID->"3ec0f500-9fb8-498d-95ec-8863fb64905e"],
Cell[30826, 662, 360, 9, 43, "Message",ExpressionUUID->"a6a387a6-72fa-457e-99bf-812e91be2544"],
Cell[31189, 673, 362, 9, 43, "Message",ExpressionUUID->"7af0713c-fa6f-401b-9d66-67bad2f95dbd"],
Cell[31554, 684, 362, 9, 43, "Message",ExpressionUUID->"7df56194-46c5-404e-8f4b-59e22afc03e9"],
Cell[31919, 695, 442, 10, 23, "Message",ExpressionUUID->"47372b3c-e38e-47c8-b66c-b3d985a8a015"],
Cell[32364, 707, 397, 10, 23, "Message",ExpressionUUID->"33b7f2db-8040-44d6-ae5a-0001421bf25d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32798, 722, 208, 3, 32, "Input",ExpressionUUID->"99cad37a-223e-4404-b323-33c50d456393"],
Cell[33009, 727, 3983, 72, 328, "Output",ExpressionUUID->"307543fc-ea96-4c17-aa66-1016ba2e5ff5"]
}, Open  ]]
}, Open  ]]
}
]
*)

